<!--html>

<head>
  <title>Crypto Challenge</title>
  <script src="https://www.gstatic.com/firebasejs/5.0.4/firebase.js"></script>
  <script src="https://cdn.firebase.com/libs/firebaseui/2.5.1/firebaseui.js"></script>
  <link type="text/css" rel="stylesheet" href="https://cdn.firebase.com/libs/firebaseui/2.5.1/firebaseui.css" />

  <script src="https://www.gstatic.com/firebasejs/5.0.4/firebase.js"></script>
  <script>
  // Initialize Firebase
  var config = {
    apiKey: "AIzaSyBf5ERovaG2P1_HblEVy9h5V2N850PWB74",
    authDomain: "cryptocast-2605a.firebaseapp.com",
    databaseURL: "https://cryptocast-2605a.firebaseio.com",
    projectId: "cryptocast-2605a",
    storageBucket: "cryptocast-2605a.appspot.com",
    messagingSenderId: "204336388119"
  };
  firebase.initializeApp(config);


  var uiConfig = {
    signInSuccessUrl: 'http://localhost:8080/',
    signInOptions: [
      // Leave the lines as is for the providers you want to offer your users.
      firebase.auth.GoogleAuthProvider.PROVIDER_ID,
      firebase.auth.FacebookAuthProvider.PROVIDER_ID,
      firebase.auth.TwitterAuthProvider.PROVIDER_ID,
      firebase.auth.GithubAuthProvider.PROVIDER_ID,
      firebase.auth.EmailAuthProvider.PROVIDER_ID,
      firebase.auth.PhoneAuthProvider.PROVIDER_ID
    ],
  };

  //console.log(firebase.database().ref());
  // Initialize the FirebaseUI Widget using Firebase.
  var ui = new firebaseui.auth.AuthUI(firebase.auth());


  // The start method will wait until the DOM is loaded.
  //   ui.start('#firebaseui-auth-container', uiConfig);

  </script>

</head>

<body>
  Hello World
  <div id="firebaseUi-auth-container">
  </div>
  <script>
  if (ui.isPendingRedirect()) {
  ui.start('#firebaseui-auth-container', uiConfig);
}
console.log("value is "+firebase.auth.AuthCredential);

/*  ui.start('#firebaseui-auth-container', {
    signInOptions: [
      firebase.auth.EmailAuthProvider.PROVIDER_ID
    ],
    // Other config options...
  }); */
  </script>
</body>

</html-->


<!DOCTYPE html>
<html>
  <head>
    <meta charset="UTF-8">
    <title>Sample FirebaseUI App</title>
    <!-- *******************************************************************************************
       * TODO(DEVELOPER): Paste the initialization snippet from:
       * Firebase Console > Overview > Add Firebase to your web app. *
       ***************************************************************************************** -->
       <script src="https://www.gstatic.com/firebasejs/5.0.4/firebase.js"></script>
       <script src="https://cdn.firebase.com/libs/firebaseui/2.5.1/firebaseui.js"></script>
       <link type="text/css" rel="stylesheet" href="https://cdn.firebase.com/libs/firebaseui/2.5.1/firebaseui.css" />

       <script src="https://www.gstatic.com/firebasejs/5.0.4/firebase.js"></script>
       <script>
       // Initialize Firebase
       var config = {
         apiKey: "AIzaSyBf5ERovaG2P1_HblEVy9h5V2N850PWB74",
         authDomain: "cryptocast-2605a.firebaseapp.com",
         databaseURL: "https://cryptocast-2605a.firebaseio.com",
         projectId: "cryptocast-2605a",
         storageBucket: "cryptocast-2605a.appspot.com",
         messagingSenderId: "204336388119"
       };
       firebase.initializeApp(config);
</script>
    <script src="https://cdn.firebase.com/libs/firebaseui/3.0.0/firebaseui.js"></script>
    <link type="text/css" rel="stylesheet" href="https://cdn.firebase.com/libs/firebaseui/3.0.0/firebaseui.css" />
    <script type="text/javascript">
      // FirebaseUI config.
      var uiConfig = {
        callbacks: {
          signInSuccessWithAuthResult: function(authResult, redirectUrl) {
            var user = authResult.user;
            var credential = authResult.credential;
            var isNewUser = authResult.additionalUserInfo.isNewUser;
            var providerId = authResult.additionalUserInfo.providerId;
            var operationType = authResult.operationType;
            // Do something with the returned AuthResult.
            // Return type determines whether we continue the redirect automatically
            // or whether we leave that to developer to handle.
            return true;

          },
          signInSuccess: function(currentUser, credential, redirectUrl) {
            console.log("uhbub " +user);
          },
          signInError: function(currentUser, credential, redirectUrl) {
            console.log("uhbuedfczb " +user);
          },
          uiShown: function() {
            // The widget is rendered.
            // Hide the loader.
            document.getElementById('loader').style.display = 'none';
          }
        },
        credentialHelper: firebaseui.auth.CredentialHelper.ACCOUNT_CHOOSER_COM,
        // Query parameter name for mode.
        queryParameterForWidgetMode: 'mode',
        // Query parameter name for sign in success url.
        queryParameterForSignInSuccessUrl: 'signInSuccessUrl',
        // Will use popup for IDP Providers sign-in flow instead of the default, redirect.
        signInFlow: 'popup',
        signInSuccessUrl: 'http://localhost:8080/',
        signInOptions: [
          // Leave the lines as is for the providers you want to offer your users.
          firebase.auth.GoogleAuthProvider.PROVIDER_ID,
          firebase.auth.FacebookAuthProvider.PROVIDER_ID,
          firebase.auth.TwitterAuthProvider.PROVIDER_ID,
          {
            provider: firebase.auth.EmailAuthProvider.PROVIDER_ID,
            // Whether the display name should be displayed in the Sign Up page.
            requireDisplayName: true
          },
          {
            provider: firebase.auth.PhoneAuthProvider.PROVIDER_ID,
            // Invisible reCAPTCHA with image challenge and bottom left badge.
            recaptchaParameters: {
              type: 'image',
              size: 'invisible',
              badge: 'bottomleft'
            }
          }
        ],
        // Terms of service url.
        tosUrl: '<your-tos-url>'
      };

      var ui = new firebaseui.auth.AuthUI(firebase.auth());
      // The start method will wait until the DOM is loaded.
      ui.start('#firebaseui-auth-container', uiConfig);
  /*    if( firebase.currentUser==null)
        {'logged_in': "signup"};
      else {
         {'logged_in':firebase.currentUser};

      console.log("value is " + firebase.currentUser);

*/


    </script>
  </head>
  <body>
    <!-- The surrounding HTML is left untouched by FirebaseUI.
         Your app may use that space for branding, controls and other customizations.-->
         <div class="section section-signup page-header" style="background-image: url('./assets/img/city.jpg');">
           <div class="container">
             <div class="row">
               <div class="col-md-4 ml-auto mr-auto">
                 <div class="card card-signup">
                   <form class="form" method="" action="">
                     <div class="card-header card-header-primary text-center">
                       <h4>Sign Up</h4>

    <div id="firebaseui-auth-container"></div>
    <div id="loader">Loading...</div>
  </div>
</div>
</div>
</div>
</div>
</div>
  </body>
</html>
